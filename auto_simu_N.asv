function auto_simu(N)
%AUTO_SIMU 设定在一次作业中，为参数N设定多少种度分布分别进行仿真
%   Detailed explanation goes here
addpath('lib');
clear global;
switch(N)
    case 50
        p1 = 0.374818822;
    case 100
        p1 = 0.311692099;%0.409566859722892;%0.518575458622288;%0.125339741994915;%0.275525844137450;%0.4096;%0.311692099;
    case 200
        p1 = 0.29679236;
    case 300
        p1 = 0.263474711;
    case 400
        p1 = 0.248577936;
    case 500
        p1 = 0.248577936;
end
% type = 'degree_limit_opt';
% save_file_name = ['N',num2str(N),'_net_simu_',type];
% if(~exist(save_file_name,'file'))
%     clear global;
%     distribution_arg = getDistribution( N,'degree_limit',p1,4 );
%     simu_type(N,distribution_arg,type);
% end

% type = 'cut_siliton';
% save_file_name = ['N',num2str(N),'_net_simu_',type];
% if(~exist(save_file_name,'file'))
%     clear global;
%     distribution_arg = getDistribution( N,'cut_siliton',4 );
%     simu_type(N,distribution_arg,type);
% end

% type = 'iLT';
% save_file_name = ['N',num2str(N),'_net_simu_',type];
% if(~exist(save_file_name,'file'))
%     clear global;
%     distribution_arg = getDistribution( N,'iLT' );
%     simu_type(N,distribution_arg,type);
% end

type = 'robust_siliton';
save_file_name = ['N',num2str(N),'_net_simu_',type];
if(~exist(save_file_name,'file'))
    clear global;
    distribution_arg = getDistribution( N,'robust_siliton' );
    simu_type(N,distribution_arg,type);
end

end

function simu_type(N,distribution_arg,type)
global nodes nodeNum phyNBorMap grid_width  nx  ny;
simu_times = 100;
success_times = 0;
for indx = 21:simu_times
success_times = success_times + system_setout(N,distribution_arg);

save_file_name = build_data_file_name(N,type,indx);
save(save_file_name, 'nodes','nodeNum','phyNBorMap','grid_width', 'nx', 'ny');
end
% statis.sucess_p = success_times/simu_times;

% everage_times = everage_times - invalid_data_num;
% 
% num_decode_symbol = num_decode_symbol / everage_times;
% num_received_pack = num_received_pack / everage_times;
% everage_path_len = everage_path_len / everage_times;
% max_path_len = max_path_len / everage_times;
% save_file_name = ['N',num2str(N),'_net_simu_',type];
% save(save_file_name, 'num_decode_symbol','num_received_pack', 'everage_path_len', 'max_path_len');
end
