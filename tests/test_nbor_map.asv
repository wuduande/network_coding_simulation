function [ output_args ] = test_nbor_map( input_args )
%TEST_NBOR_MAP Summary of this function goes here
%   Detailed explanation goes here
global nodes comRange nodeNum phyNBorMap max_nb_num;
set_env(nodeNum_arg,distribution_arg);
put_nodes_in_grid();

end
%此函数来源于system_init文件，用于生成phyNBorMap矩阵，此变量记录了任意两个节点是否相邻。
%相邻则相应位置的值为1，否则为0;
function construct_phy_NBor_map()
    global nodes comRange nodeNum phyNBorMap max_nb_num;
    phyNBorMap = zeros(nodeNum,nodeNum);
    for k1 = 1:nodeNum
        for k2 = k1+1:nodeNum
            phyNBorMap(k1,k2) = (norm(nodes(k1).pos - nodes(k2).pos) < comRange);
        end
    end
    phyNBorMap = phyNBorMap + phyNBorMap';
    
    max_nb_num = max(sum(phyNBorMap,1));
end

%以下函数用于帮助构建测试环境
function set_env(nodeNum_arg,distribution_arg)
global comRange	  nodeMemSize     sensor_density ...
       nodeNum    distribution  code_redundence;
   
nodeNum = nodeNum_arg;%场景下的结点总数。，这个不能改，要改的话，许多函数里面的常数都要改。因为是方格mesh网络。
nodeMemSize = 100;%每个结点可以存储4个包。
code_redundence = 2;%每个码包生成多少个副本
distribution = distribution_arg;%初始化度分布
comRange = 10;%communication range
 % phyNBorMap:物理场景下，在通信范围内的邻结点。结点自身不一定发现了这些邻结点。这个map用于模拟信道通信距离。
sensor_density = 2;%结点密度：单个结点通信面积*结点总数/布置面积
end
